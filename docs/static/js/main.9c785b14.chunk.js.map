{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","onSubmit","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAKMC,EAAe,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAItB,OACI,sBAAMO,SAAUN,EAAhB,SACI,uBAAOO,KAAK,OACLC,MAAOV,EACPW,SAfM,SAACR,GAClBF,EAAcE,EAAES,OAAOF,QAeZF,SAAUN,O,OCpBhBW,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACP,mCAENN,EAHa,0FAG4EO,UAAUF,GAHtF,sBAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXvB,kBAeZY,GAfY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SACrB,ECHwB,SAACA,GACzB,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDbwBK,CAAanB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAKpB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAmDI,IAClDa,GAAW,mBAAGjB,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,wBAAC,EAAD,2BACQA,GADR,IAEIW,IAAKX,EAAIhB,eEWtB4B,EA3BM,WACjB,MAAoC3C,mBAAS,CAAC,kBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACI,gCAEI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAUA,GACLA,YChBjCuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9c785b14.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\"\r\n                   value={inputValue}\r\n                   onChange={handleChange}\r\n                   onSubmit={handleSubmit}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};","export const getGifs = async(category) => {\r\n    const key = \"nYthjbnG6oCLPov42WcOUhM4mvYIFjHD\";\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=nYthjbnG6oCLPov42WcOUhM4mvYIFjHD&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};","import React from 'react';\r\nimport {GifGridItem} from './GifGridItem';\r\n// import {getGifs} from \"../helpers/getGifs\";\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    // const [images, setImages] = useState([]);\r\n    //\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img =>\r\n                        <GifGridItem\r\n                            {...img}\r\n                            key={img.id}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n};","import React, {useState} from 'react';\r\nimport {AddCategory} from \"./components/AddCategory\";\r\nimport {GifGrid} from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball Z']);\r\n\r\n    // const handleAdd = (e) => {\r\n    //     // setCategories([...categories, 'Hunter X Hunter']);\r\n    //     setCategories(cats => [...cats, 'Hunter X Hunter']);\r\n    // }\r\n    return (\r\n        <div>\r\n\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            category={category}\r\n                            key={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}